# Distributed under the terms of the GNU General Public License v2

EAPI=7
PYTHON_COMPAT=( python3+ )

inherit meson gnome3 python-any-r1 virtualx

DESCRIPTION="Gimp ToolKit +"
HOMEPAGE="https://www.gtk.org/"

LICENSE="LGPL-2+"
SLOT="4"
#IUSE="aqua broadway cloudprint colord cups +doc examples +introspection test vim-syntax wayland +X xinerama"
IUSE="aqua broadway colord cups examples ffmpeg gstreamer +introspection sysprof test vulkan wayland +X cpu_flags_x86_f16c"
REQUIRED_USE="
	|| ( aqua wayland X )
	colord? ( cups )
"

SRC_URI="{{ src_uri }}"

# TODO: add net-libs/libcloudproviders
#cloudproviders? ( net-libs/libcloudproviders )

KEYWORDS="*"

# Upstream wants us to do their job:
# https://bugzilla.gnome.org/show_bug.cgi?id=768662#c1
RESTRICT="test"



COMMON_DEPEND="
	>=dev-libs/glib-2.76.0:2
	>=x11-libs/cairo-1.17.6[aqua?,glib,svg(+),X?]
	>=x11-libs/pango-1.50.0[introspection?]
	>=dev-libs/fribidi-1.0.6
	>=media-libs/harfbuzz-2.6.0:=
	>=x11-libs/gdk-pixbuf-2.30:2[introspection?]
	media-libs/libpng:=
	media-libs/tiff:=
	media-libs/libjpeg-turbo:=
	>=media-libs/libepoxy-1.4[egl,X(+)?]
	>=media-libs/graphene-1.10.0[introspection?]
	app-text/iso-codes
	x11-misc/shared-mime-info

	colord? ( >=x11-misc/colord-0.1.9:0= )
	cups? ( >=net-print/cups-2.0 )
	ffmpeg? ( media-video/ffmpeg:= )
	gstreamer? (
		>=media-libs/gst-plugins-bad-1.12.3:1.0
		>=media-libs/gst-plugins-base-1.12.3:1.0[opengl]
	)
	introspection? ( >=dev-libs/gobject-introspection-1.76:= )
	vulkan? ( media-libs/vulkan-loader:= )
	wayland? (
		>=dev-libs/wayland-1.21.0
		>=dev-libs/wayland-protocols-1.31
		media-libs/mesa[wayland]
		>=x11-libs/libxkbcommon-0.2
	)
	X? (
		>=app-accessibility/at-spi2-core-2.46.0
		media-libs/fontconfig
		media-libs/mesa[X(+)]
		x11-libs/libX11
		>=x11-libs/libXi-1.8
		x11-libs/libXext
		>=x11-libs/libXrandr-1.5
		x11-libs/libXcursor
		x11-libs/libXfixes
		x11-libs/libXdamage
		x11-libs/libXinerama
	)
"
DEPEND="${COMMON_DEPEND}
	sysprof? ( >=dev-util/sysprof-capture-3.40.1:4 )
	X? ( x11-base/xorg-proto )
"
RDEPEND="${COMMON_DEPEND}
	>=dev-util/gtk-update-icon-cache-3
"
# librsvg for svg icons (PDEPEND to avoid circular dep), bug #547710
PDEPEND="
	gnome-base/librsvg
	>=x11-themes/adwaita-icon-theme-3.14
"
BDEPEND="
	dev-libs/gobject-introspection-common
	introspection? (
		dev-python/pygobject:3[${PYTHON_USEDEP}]
	)
	dev-python/docutils
	>=dev-libs/glib-2.76.0
	>=dev-util/gdbus-codegen-2.48
	dev-util/glib-utils
	>=sys-devel/gettext-0.19.7
	virtual/pkgconfig
	test? (
		dev-libs/glib:2
		media-fonts/cantarell
		wayland? ( dev-libs/weston[headless] )
	)
"

post_src_unpack() {
	mv ${WORKDIR}/{{github_user}}-* ${S} || die
}

pkg_setup() {
	use introspection && python-any-r1_pkg_setup
}


src_prepare() {
	default
	xdg_environment_reset

	# Nothing should use gtk4-update-icon-cache and an unversioned one is shipped by dev-util/gtk-update-icon-cache
	sed -i \
		-e '/gtk4-update-icon-cache/d' \
		docs/reference/gtk/meson.build \
		tools/meson.build \
		|| die

	# The border-image-excess-size.ui test is known to fail on big-endian platforms
	# See https://gitlab.gnome.org/GNOME/gtk/-/issues/5904
	if [[ $(tc-endian) == big ]]; then
		sed -i \
			-e "/border-image-excess-size.ui/d" \
			-e "/^xfails =/a 'border-image-excess-size.ui'," \
			testsuite/reftests/meson.build || die
	fi

	gnome3_src_prepare
}

# $(meson_feature cloudproviders)
src_configure() {
	local emesonargs=(
		# GDK backends
		$(meson_use X x11-backend)
		$(meson_use wayland wayland-backend)
		$(meson_use broadway broadway-backend)
		-Dwin32-backend=false
		$(meson_use aqua macos-backend)

		# Media backends
		$(meson_feature ffmpeg media-ffmpeg)
		$(meson_feature gstreamer media-gstreamer)

		# Print backends
		-Dprint-cpdb=disabled
		$(meson_feature cups print-cups)

		# Optional dependencies
		$(meson_feature vulkan)
		$(meson_feature sysprof)
		-Dtracker=disabled  # tracker3 is not packaged in Gentoo yet
		$(meson_feature colord)
		# Expected to fail with GCC < 11
		# See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=71993
		$(meson_feature cpu_flags_x86_f16c f16c)

		# Introspection
		$(meson_feature introspection)

		# Documentation
		-Ddocumentation=false # we ship pregenerated API docs from tarball
		-Dscreenshots=false
		-Dman-pages=true

		# Demos, examples, and tests
		-Ddemo-profile=default
		$(meson_use examples build-demos)
		$(meson_use test build-testsuite)
		$(meson_use examples build-examples)
		-Dbuild-tests=false
	)
	meson_src_configure
}

src_install() {
	meson_src_install

	#insinto /etc/gtk-4.0
	#doins "${FILESDIR}"/settings.ini
	# Skip README.{in,commits,win32} that would get installed by default
	#DOCS=( AUTHORS ChangeLog NEWS README )
	#einstalldocs
}

pkg_postinst() {
	gnome3_pkg_postinst

	if ! has_version "app-text/evince"; then
		elog "Please install app-text/evince for print preview functionality."
		elog "Alternatively, check \"gtk-print-preview-command\" documentation and"
		elog "add it to your settings.ini file."
	fi
}
